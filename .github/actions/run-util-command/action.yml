name: Run Util Command

description: Runs the rjip CLI and outputs the result.

inputs:
    data_json_file:
        description: "The JSON file to use as input"
        required: true
    last_picks_file:
        description: "The file to track the last picked items"
        required: true
    UTIL_BINARY_PATH:
        description: "The path to the rjip binary"
        required: true
    json_comparison_property:
        description: "The property to compare in the JSON file"
        required: true

outputs:
    command_output:
        description: "The output from the rjip command"
    status:
        description: "The status of the rjip command"

runs:
    using: "composite"
    steps:
        - run: |
              #!/bin/bash
              set -euxo pipefail

              echo "Running rjip command..."
              cd $(dirname ${{ inputs.UTIL_BINARY_PATH }})
              if [ ! -f "./$(basename ${{ inputs.UTIL_BINARY_PATH }})" ]; then
                echo "binary not found!"
                exit 1
              fi
              command_output=$(./$(basename ${{ inputs.UTIL_BINARY_PATH }}) ../../${{ inputs.data_json_file }} ${{ inputs.json_comparison_property }} ../../${{ inputs.last_picks_file }} || true)
              echo "Command output: $command_output"
              cd ../..
              echo "::set-output name=command_output::$command_output"
              status=$(echo "$command_output" | jq -r '.status')
              echo "::set-output name=status::$status"
          shell: bash
