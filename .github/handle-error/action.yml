name: Handle Error

description: Handles the error case based on the error code.

inputs:
    command_output:
        description: "The output from the rjip command"
        required: true
    last_picks_file:
        description: "The file to track the last picked items"
        required: true
    data_json_file:
        description: "The JSON file to use as input"
        required: true
    UTIL_BINARY_PATH:
        description: "The path to the rjip binary"
        required: true
    json_comparison_property:
        description: "The property to compare in the JSON file"
        required: true

outputs:
    status:
        description: "The status after handling the error"

runs:
    using: "composite"
    steps:
        - run: |
              #!/bin/bash
              set -euxo pipefail

              handle_error() {
                echo "Handling error..."
                error_code=$(echo "${{ inputs.command_output }}" | jq -r '.error_code')
                error_message=$(echo "${{ inputs.command_output }}" | jq -r '.message')
                case "$error_code" in
                    "invalid_or_nonexistent_json_file" | "empty_input_json_file" | "invalid_property_name" | "generic_error" | "")
                        echo "Error: $error_message"
                        exit 1
                        ;;
                    "all_items_picked")
                        echo "Error: All items have been picked and no new items are available. Message: $error_message"
                        if [ -f "${{ inputs.last_picks_file }}" ]; then
                            rm ${{ inputs.last_picks_file }}
                            echo "::set-output name=status::retry"
                        else
                            echo "${{ inputs.last_picks_file }} not found in the root directory!"
                            exit 1
                        fi
                        ;;
                    *)
                        echo "Error: An unknown error occurred. Message: $error_message"
                        exit 1
                        ;;
                esac
              }

              handle_error
          shell: bash
